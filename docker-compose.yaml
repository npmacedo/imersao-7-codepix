version: '3'

services:
  bank-front-bbx:
    build: ./bank-frontend
    entrypoint: .docker/entrypoint.sh 
    ports:
      - 3001:3000
    volumes: 
      - ./bank-frontend:/home/node/app
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"
    environment:
      - NEXT_PUBLIC_NEST_API_URL=http://host.docker.internal:8001/api
      - NEXT_PUBLIC_BANK_NAME=BBX
      - NEXT_PUBLIC_BANK_CODE=001

  bank-front-cter:
    build: ./bank-frontend
    entrypoint: .docker/entrypoint.sh 
    ports:
      - 3002:3000
    volumes: 
      - ./bank-frontend:/home/node/app
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"
    environment:
      - NEXT_PUBLIC_NEST_API_URL=http://host.docker.internal:8002/api
      - NEXT_PUBLIC_BANK_NAME=CTER
      - NEXT_PUBLIC_BANK_CODE=002


  bank-api-bbx:
    build: ./bank-api
    entrypoint: .docker/entrypoint.sh
    ports:
      - 8001:3000
    volumes:
      - ./bank-api/.:/home/node/app
      - ./bank-api/dist-bbx:/home/node/app/dist
    depends_on:
      - bank-api-db-bbx
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    environment:
      - TYPEORM_DATABASE=bbx
      - TYPEORM_PORT=5432
      - BANK_CODE=001

  bank-api-db-bbx:
    build: bank-api/.docker/postgres
    restart: always
    tty: true
    volumes:
      - ./bank-api/.docker/dbdata-bbx:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=bbx
    ports:
      - 5432:5432


  bank-api-cter:
    build: ./bank-api
    entrypoint: .docker/entrypoint.sh
    ports:
      - 8002:3000
    volumes:
      - ./bank-api/.:/home/node/app
      - ./bank-api/dist-cter:/home/node/app/dist
    depends_on:
      - bank-api-db-cter
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    environment:
      - TYPEORM_DATABASE=cter
      - TYPEORM_PORT=5433
      - BANK_CODE=002

  bank-api-db-cter:
    build: bank-api/.docker/postgres
    restart: always
    tty: true
    volumes:
      - ./bank-api/.docker/dbdata-cter:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=cter
    ports:
      - 5433:5432






  codepix:
    build: ./codepix
    ports:
    - "50051:50051"
    volumes:
      - ./codepix:/go/src/
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    depends_on:
      - codepix-db

  codepix-db:
    image: postgres:9.4
    restart: always
    tty: true
    volumes:
      - ./codepix/.pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=codepix
    ports:
      - "5434:5432"

  pgadmin:
    image: dpage/pgadmin4
    tty: true
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@user.com
      - PGADMIN_DEFAULT_PASSWORD=123456
    ports:
      - "9000:80"
    depends_on:
      - codepix-db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  kafka-topics-generator:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    command: >
      bash -c
        "sleep 5s &&
        kafka-topics --create --topic=transactions --if-not-exists --bootstrap-server=kafka:9092 &&
        kafka-topics --create --topic=transaction_confirmation --if-not-exists --bootstrap-server=kafka:9092 &&
        kafka-topics --create --topic=bank001 --if-not-exists --bootstrap-server=kafka:9092 &&
        kafka-topics --create --topic=bank002 --if-not-exists --bootstrap-server=kafka:9092"
  
  control-center:
      image: confluentinc/cp-enterprise-control-center:6.0.1
      hostname: control-center
      depends_on:
        - kafka
      ports:
        - "9021:9021"
      environment:
        CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
        CONTROL_CENTER_REPLICATION_FACTOR: 1
        PORT: 9021

    